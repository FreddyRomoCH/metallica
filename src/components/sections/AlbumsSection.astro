---
import { albums } from "../../services/metallica-data";
//Props
const { title = "Albums" } = Astro.props;
---

<section
  class="h-screen w-screen text-center relative overflow-hidden"
  id={title.toLowerCase()}
  title={title}
>
  <div class="flex flex-col w-screen h-screen">
    <div>
      <h2 class="text-gray-200 mt-28 text-2xl font-medium mb-4 rock-font">
        {title}
      </h2>
    </div>
    <div class="relative mb-5 mx-auto w-full">
      <!-- h-[70vh -->
      <ul
        class="content-albums grid grid-cols-[repeat(auto-fill,minmax(200px,1fr))] w-full max-w-[90%] gap-4 items-center justify-items-center px-4 box-border my-0 mx-auto max-h-[100%] overflow-x-hidden"
      >
        {
          albums.map(({ id, title, year, cover }) => (
            <li
              class="albums-box rounded-sm relative h-32 transform transition-transform duration-500 ease-in-out bg-center w-[100%] flex flex-col items-center justify-center opacity-0 -translate-y-9"
              style={{ backgroundImage: `url(${cover})` }}
            >
              <div class="rounded-sm z-30">
                <button class="bg-gray-700/35 text-white absolute top-0 left-0 w-full h-full">
                  <h4 class=" absolute p-1 w-full top-0 bg-gray-700/70">
                    {title} <span class="italic">({year})</span>
                  </h4>
                </button>
              </div>
              <a
                class="btn-see-more bg-gray-700/35 text-gray-200 font-light rounded-lg px-6 py-1 border-gray-200 border-2 opacity-0 z-30"
                href={`/albums/#${id}`}
              >
                See More
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <div>
      <a
        href="/albums"
        class="bg-gray-700/5 text-gray-200 font-light rounded-lg px-6 py-1 border-gray-200 border-2"
        >See more</a
      >
    </div>
  </div>
</section>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const albums = entry.target.querySelectorAll(".albums-box");
        albums.forEach((album, index) => {
          setTimeout(() => {
            album.classList.add("show-animated");
          }, index * 100);
        });
      }
    });
  });

  const contentAlbums = document.querySelector(".content-albums");
  if (contentAlbums) {
    observer.observe(contentAlbums);
  }
</script>

<style>
  .albums-box > .btn-see-more {
    transform: rotateX(90deg);
    transition:
      transform 0.3s ease-in-out 0.2s,
      opacity 0.3s ease-in-out 0.3s;
  }

  .albums-box:hover > .btn-see-more {
    transform: rotateX(0);
    opacity: 1;
  }

  .show-animated {
    transform: translateY(0);
    opacity: 1;
    transition:
      transform 0.5s ease-in-out,
      opacity 0.5s ease-in-out;
  }
</style>
